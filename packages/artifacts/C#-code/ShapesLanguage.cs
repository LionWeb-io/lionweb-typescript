// Generated by C# language instantiator generator!
// Don't modify, but you can delete and regenerate any time!

namespace Examples.Shapes.M2;

using LionWeb.Core.M2;
using LionWeb.Core.M3;

public static class ShapesLanguage
{
    public static readonly Language Instance = new(
        "degCinkTmS4XeJW0Zt0gH5vpfm/A1DXx/661McUwJYE=",
        "Shapes",
        "ShapesLanguage",
        "1"
    );

    static ShapesLanguage()
    {
        var Circle = Instance.Concept("Zo2fmW+75SutxNaDoiEVWqizBqWCY9a/GA0kCsyZ+BY=", "Circle", "Circle");
        var Coord = Instance.Concept("tkFfQ8zQUGkRYuf49jGEQbT/tEWMDgOF/9tCVhysZp4=", "Coord", "Coord");
        var Geometry = Instance.Concept("6WenyMw62+3cfpFVnR5fHrPuH7W2bbd5ckL/XGqIXvI=", "Geometry", "Geometry");
        var IShape = Instance.Interface("J6Ht+ZUBOTJcVeAd2+D0/5Oy0hVp9/NNymMjcyVvghg=", "IShape", "IShape");
        var Line = Instance.Concept("gO8PIp6jwFRFGxjhKvUkvqQzPp5tA7uoyq1Ds+++VrE=", "Line", "Line");
        var Shape = Instance.Concept("nGVjRMnytakFG6wZCA3z9k/SAT/Cl/s7a9JsUXzmQYA=", "Shape", "Shape");

        Circle.Extending(Shape);
        Circle.Property("8+qjE+QYSlQbK5Wsx2qPzdraYFfJ5/fbvwqereAGxwM=", "r", "r").OfType(BuiltIns.Integer);
        Circle.Containment("whYUKHLaXktGz1vQ1ymo3UVeBaAxbXQ+o+QIDoSwT08=", "center", "center").OfType(Coord);

        Coord.Property("talETXH4Hu3hejpdc8LStJn9wguk++eGeVHTWes51EU=", "x", "x").OfType(BuiltIns.Integer);
        Coord.Property("O50WXAMLPXmvsnLK+ij5T0vwatkpxfLkXrS8NOIQQOM=", "y", "y").OfType(BuiltIns.Integer);
        Coord.Property("R9CsbGCzkfy8gMUHv17hH0mpHbdAFCmKWQPKV/ZCkzU=", "z", "z").OfType(BuiltIns.Integer);

        Geometry.Containment("NtseHkJPFTFjR1Lw/8adJU3L4CiHKA0TZ1F/VKh3jt0=", "shapes", "shapes").OfType(IShape).IsMultiple().IsOptional();

        Line.Extending(Shape);
        Line.Containment("GR8igHsON2QI4FV7a1irPPo+kjA9nugafRfJs8x5/Rk=", "start", "start").OfType(Coord);
        Line.Containment("WvSFMDB6UNk2fBPPTfyXNVh8qFUJTPl0+W1BgCGgyzQ=", "end", "end").OfType(Coord);

        Shape.IsAbstract().Implementing(BuiltIns.INamed, IShape);
    }
}
