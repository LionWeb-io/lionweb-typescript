// Generated by C# language instantiator generator!
// Don't modify, but you can delete and regenerate any time!

namespace LionWeb.Core.M2;

using LionWeb.Core.M2;
using LionWeb.Core.M3;

public static class BuiltIns
{
    public static readonly Language Instance = new(
        "LionCore-builtins",
        "LionCore-builtins",
        "LionCore_builtins",
        "2023.1"
    );

    static BuiltIns()
    {
        var Boolean = Instance.PrimitiveType("LionCore-builtins-Boolean", "LionCore-builtins-Boolean", "Boolean");
        var INamed = Instance.Interface("LionCore-builtins-INamed", "LionCore-builtins-INamed", "INamed");
        var Integer = Instance.PrimitiveType("LionCore-builtins-Integer", "LionCore-builtins-Integer", "Integer");
        var JSON = Instance.PrimitiveType("LionCore-builtins-JSON", "LionCore-builtins-JSON", "JSON");
        var Node = Instance.Concept("LionCore-builtins-Node", "LionCore-builtins-Node", "Node");
        var String = Instance.PrimitiveType("LionCore-builtins-String", "LionCore-builtins-String", "String");

        INamed.Property("LionCore-builtins-INamed-name", "LionCore-builtins-INamed-name", "name").OfType(BuiltIns.String);

        Node.IsAbstract();
    }
}
